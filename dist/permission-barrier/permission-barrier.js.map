{"version":3,"sources":["../../src/permission-barrier/permission-barrier.js"],"names":["PermissionBarrier","permit","storeHandler","routes","actions","matchingPermissions","temporaryMatchingPermissions","temporaryMatchedPermissions","restoreTemporaryMatchingPermissions","restoreTemporaryMatchedPermissions","routePermissions","Object","keys","forEach","routeName","permissions","PermissionBarrierAction","split","temporaryPermission","includes","push","storeTemporaryMatchingPermissions","temporaryMatchingPermission","i","indexOf","splice","setJson","getJson","storeTemporaryMatchedPermissions","temporaryMatchedPermission","route","notPassCallback","name","passAction","length","every","action","match","getMatchedPermissions"],"mappings":"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","sourcesContent":["import {PermissionBarrierAction} from './permission-barrier-action'\r\n\r\nexport class PermissionBarrier {\r\n    constructor(permit, storeHandler) {\r\n        this.permit = permit\r\n        this.storeHandler = storeHandler\r\n        this.routes = {}\r\n        this.actions = []\r\n        this.matchingPermissions = []\r\n        this.temporaryMatchingPermissions = []\r\n        this.temporaryMatchedPermissions = []\r\n        this.restoreTemporaryMatchingPermissions()\r\n        this.restoreTemporaryMatchedPermissions()\r\n    }\r\n\r\n    importFromRoutePermissions(routePermissions = {}) {\r\n        Object.keys(routePermissions).forEach(routeName => {\r\n            const permissions = routePermissions[routeName]\r\n            this.routes[routeName] = new PermissionBarrierAction(\r\n                typeof permissions === 'string' ?\r\n                    permissions.split('|') : permissions,\r\n            )\r\n        })\r\n        return this\r\n    }\r\n\r\n    setMatchingPermissions(matchingPermissions = []) {\r\n        this.matchingPermissions = matchingPermissions\r\n    }\r\n\r\n    addTemporaryMatchingPermission(temporaryPermission) {\r\n        if (!this.temporaryMatchingPermissions.includes(temporaryPermission)) {\r\n            this.temporaryMatchingPermissions.push(temporaryPermission)\r\n            this.storeTemporaryMatchingPermissions()\r\n        }\r\n        return this\r\n    }\r\n\r\n    removeTemporaryMatchingPermission(temporaryMatchingPermission) {\r\n        const i = this.temporaryMatchingPermissions.indexOf(temporaryMatchingPermission)\r\n        if (i !== -1) {\r\n            this.temporaryMatchingPermissions.splice(i, 1)\r\n            this.storeTemporaryMatchingPermissions()\r\n        }\r\n        return this\r\n    }\r\n\r\n    storeTemporaryMatchingPermissions() {\r\n        this.storeHandler.setJson('__permission_barrier_temporary_matching_permission', this.temporaryMatchingPermissions)\r\n        return this\r\n    }\r\n\r\n    restoreTemporaryMatchingPermissions() {\r\n        (temporaryMatchingPermissions => {\r\n            temporaryMatchingPermissions && (this.temporaryMatchingPermissions = temporaryMatchingPermissions)\r\n        })(this.storeHandler.getJson('__permission_barrier_temporary_matching_permission'))\r\n        return this\r\n    }\r\n\r\n    addTemporaryMatchedPermission(temporaryMatchedPermissions) {\r\n        if (!this.temporaryMatchedPermissions.includes(temporaryMatchedPermissions)) {\r\n            this.temporaryMatchedPermissions.push(temporaryMatchedPermissions)\r\n            this.storeTemporaryMatchedPermissions()\r\n        }\r\n        return this\r\n    }\r\n\r\n    removeTemporaryMatchedPermission(temporaryMatchedPermission) {\r\n        const i = this.temporaryMatchedPermissions.indexOf(temporaryMatchedPermission)\r\n        if (i !== -1) {\r\n            this.temporaryMatchedPermissions.splice(i, 1)\r\n            this.storeTemporaryMatchedPermissions()\r\n        }\r\n        return this\r\n    }\r\n\r\n    storeTemporaryMatchedPermissions() {\r\n        this.storeHandler.setJson('__permission_barrier_temporary_matched_permission', this.temporaryMatchedPermissions)\r\n        return this\r\n    }\r\n\r\n    restoreTemporaryMatchedPermissions() {\r\n        (temporaryMatchedPermissions => {\r\n            temporaryMatchedPermissions && (this.temporaryMatchedPermissions = temporaryMatchedPermissions)\r\n        })(this.storeHandler.getJson('__permission_barrier_temporary_matched_permission'))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object} route\r\n     * @param {Function|null} notPassCallback\r\n     * @returns {boolean}\r\n     */\r\n    passRoutes(route, notPassCallback = null) {\r\n        if (route.name in this.routes) {\r\n            return this.passAction(this.routes[route.name], notPassCallback)\r\n        }\r\n        return true\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Function|null} notPassCallback\r\n     * @returns {boolean}\r\n     */\r\n    passActions(notPassCallback = null) {\r\n        if (this.actions.length) {\r\n            return this.actions.every(action => this.passAction(action, notPassCallback))\r\n        }\r\n        return true\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {PermissionBarrierAction} action\r\n     * @param {Function|null} notPassCallback\r\n     */\r\n    passAction(action, notPassCallback = null) {\r\n        if (this.permit.match([\r\n            ...action.getMatchedPermissions(),\r\n            ...this.temporaryMatchedPermissions,\r\n        ], [\r\n            ...this.matchingPermissions,\r\n            ...this.temporaryMatchingPermissions,\r\n        ])) {\r\n            return true\r\n        }\r\n        notPassCallback && notPassCallback(action)\r\n        return false\r\n    }\r\n}"],"file":"permission-barrier.js"}