{"version":3,"sources":["../../src/types/object-type.js"],"names":["ObjectType","value","ArrayType","isArray","Object","assign","keys","length","object","only","forEach","key","object1","object2","includes","values","Type"],"mappings":"gGAAA,uCACA,4B,8kFAEaA,CAAAA,U,mPACCC,K,CAAO,CACb,MAAOA,CAAAA,KAAK,GAAK,IAAV,EACA,CAACC,qBAAUC,OAAV,CAAkBF,KAAlB,CADD,EAEA,QAAOA,KAAP,IAAiB,QAC3B,C,oCAEYA,K,CAAO,CAChB,MAAOG,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBJ,KAAlB,CACV,C,oCAEYA,K,CAAO,CAChB,MAAOG,CAAAA,MAAM,CAACE,IAAP,CAAYL,KAAZ,EAAmBM,MAAnB,GAA8B,CACxC,C,kCAEWC,M,CAAQF,I,CAAM,CACtB,GAAMG,CAAAA,IAAI,CAAG,EAAb,CACAH,IAAI,CAACI,OAAL,CAAa,SAAAC,GAAG,CAAI,CAChBF,IAAI,CAACE,GAAD,CAAJ,CAAYA,GAAG,GAAIH,CAAAA,MAAP,CAAgBA,MAAM,CAACG,GAAD,CAAtB,CAA8B,IAC7C,CAFD,EAGA,MAAOF,CAAAA,IACV,C,oCAEYG,O,CAASC,O,CAAS,CAC3BT,MAAM,CAACE,IAAP,CAAYO,OAAZ,EAAqBH,OAArB,CAA6B,SAAAC,GAAG,CAAI,CAChCC,OAAO,CAACD,GAAD,CAAP,CAAeE,OAAO,CAACF,GAAD,CACzB,CAFD,EAGA,MAAOC,CAAAA,OACV,C,sCAEaJ,M,CAAQG,G,CAAK,CACvB,MAAOP,CAAAA,MAAM,CAACE,IAAP,CAAYE,MAAZ,EAAoBM,QAApB,CAA6BH,GAA7B,CACV,C,0CAEeH,M,CAAQP,K,CAAO,CAC3B,MAAOG,CAAAA,MAAM,CAACW,MAAP,CAAcP,MAAd,EAAsBM,QAAtB,CAA+Bb,KAA/B,CACV,C,uBApC2Be,U","sourcesContent":["import {ArrayType} from './array-type'\r\nimport {Type} from './type'\r\n\r\nexport class ObjectType extends Type {\r\n    static is(value) {\r\n        return value !== null\r\n            && !ArrayType.isArray(value)\r\n            && typeof value === 'object'\r\n    }\r\n\r\n    static clone(value) {\r\n        return Object.assign({}, value)\r\n    }\r\n\r\n    static empty(value) {\r\n        return Object.keys(value).length === 0\r\n    }\r\n\r\n    static only(object, keys) {\r\n        const only = {}\r\n        keys.forEach(key => {\r\n            only[key] = key in object ? object[key] : null\r\n        })\r\n        return only\r\n    }\r\n\r\n    static merge(object1, object2) {\r\n        Object.keys(object2).forEach(key => {\r\n            object1[key] = object2[key]\r\n        })\r\n        return object1\r\n    }\r\n\r\n    static hasKey(object, key) {\r\n        return Object.keys(object).includes(key)\r\n    }\r\n\r\n    static hasValue(object, value) {\r\n        return Object.values(object).includes(value)\r\n    }\r\n}"],"file":"object-type.js"}