{"version":3,"sources":["../../src/types/index.js"],"names":["TypeFunction","FunctionType","TypePrimitive","PrimitiveType","TypeString","StringType","TypeNumber","NumberType","TypeObject","ObjectType","TypeArray","ArrayType","empty","value","is","clone"],"mappings":"woCAAA,6CACA,+CACA,yCACA,yCACA,yCACA,uCAEA,qUAWO,GAAMA,CAAAA,YAAY,CAAG,GAAIC,2BAAzB,C,kCACA,GAAMC,CAAAA,aAAa,CAAG,GAAIC,6BAA1B,C,oCACA,GAAMC,CAAAA,UAAU,CAAG,GAAIC,uBAAvB,C,8BACA,GAAMC,CAAAA,UAAU,CAAG,GAAIC,uBAAvB,C,8BACA,GAAMC,CAAAA,UAAU,CAAG,GAAIC,uBAAvB,C,8BACA,GAAMC,CAAAA,SAAS,CAAG,GAAIC,qBAAtB,C,4BAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACzB,GAAIX,aAAa,CAACY,EAAd,CAAiBD,KAAjB,CAAJ,CAA6B,CACzB,MAAOX,CAAAA,aAAa,CAACU,KAAd,CAAoBC,KAApB,CACV,CACD,GAAIb,YAAY,CAACc,EAAb,CAAgBD,KAAhB,CAAJ,CAA4B,CACxB,MAAOb,CAAAA,YAAY,CAACY,KAAb,CAAmBC,KAAnB,CACV,CACD,GAAIH,SAAS,CAACI,EAAV,CAAaD,KAAb,CAAJ,CAAyB,CACrBH,SAAS,CAACE,KAAV,CAAgBC,KAAhB,CACH,CACD,MAAOL,CAAAA,UAAU,CAACI,KAAX,CAAiBC,KAAjB,CACV,CAEM,QAASE,CAAAA,KAAT,CAAeF,KAAf,CAAsB,CACzB,GAAIX,aAAa,CAACY,EAAd,CAAiBD,KAAjB,CAAJ,CAA6B,CACzB,MAAOX,CAAAA,aAAa,CAACa,KAAd,CAAoBF,KAApB,CACV,CACD,GAAIb,YAAY,CAACc,EAAb,CAAgBD,KAAhB,CAAJ,CAA4B,CACxB,MAAOb,CAAAA,YAAY,CAACe,KAAb,CAAmBF,KAAnB,CACV,CACD,GAAIH,SAAS,CAACI,EAAV,CAAaD,KAAb,CAAJ,CAAyB,CACrBH,SAAS,CAACK,KAAV,CAAgBF,KAAhB,CACH,CACD,MAAOL,CAAAA,UAAU,CAACO,KAAX,CAAiBF,KAAjB,CACV","sourcesContent":["import {FunctionType} from './function-type'\r\nimport {PrimitiveType} from './primitive-type'\r\nimport {StringType} from './string-type'\r\nimport {NumberType} from './number-type'\r\nimport {ObjectType} from './object-type'\r\nimport {ArrayType} from './array-type'\r\n\r\nexport * from './type'\r\n\r\nexport {\r\n    FunctionType,\r\n    PrimitiveType,\r\n    StringType,\r\n    NumberType,\r\n    ObjectType,\r\n    ArrayType,\r\n}\r\n\r\nexport const TypeFunction = new FunctionType()\r\nexport const TypePrimitive = new PrimitiveType()\r\nexport const TypeString = new StringType()\r\nexport const TypeNumber = new NumberType()\r\nexport const TypeObject = new ObjectType()\r\nexport const TypeArray = new ArrayType()\r\n\r\nexport function empty(value) {\r\n    if (TypePrimitive.is(value)) {\r\n        return TypePrimitive.empty(value)\r\n    }\r\n    if (TypeFunction.is(value)) {\r\n        return TypeFunction.empty(value)\r\n    }\r\n    if (TypeArray.is(value)) {\r\n        TypeArray.empty(value)\r\n    }\r\n    return TypeObject.empty(value)\r\n}\r\n\r\nexport function clone(value) {\r\n    if (TypePrimitive.is(value)) {\r\n        return TypePrimitive.clone(value)\r\n    }\r\n    if (TypeFunction.is(value)) {\r\n        return TypeFunction.clone(value)\r\n    }\r\n    if (TypeArray.is(value)) {\r\n        TypeArray.clone(value)\r\n    }\r\n    return TypeObject.clone(value)\r\n}"],"file":"index.js"}