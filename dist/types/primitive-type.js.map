{"version":3,"sources":["../../src/types/primitive-type.js"],"names":["PrimitiveType","value","type","includes","undefined","isNaN","StringType","is","empty","Type"],"mappings":"mGAAA,4BACA,yC,8kFAEaA,CAAAA,a,oGACT,wBAAc,6DAEb,C,6DAESC,K,CAAO,CACb,GAAIA,KAAK,GAAK,IAAd,CAAoB,MAAO,KAAP,CAEpB,GAAMC,CAAAA,IAAI,SAAUD,KAAV,CAAV,CACA,MAAQ,CACJ,WADI,CAEJ,SAFI,CAGJ,QAHI,CAIJ,QAJI,CAIM;AACV,QALI,CAMJ,QAAU;AANN,EAONE,QAPM,CAOGD,IAPH,CAQX,C,oCAEYD,K,CAAO,CAChB,MAAOA,CAAAA,KACV,C,oCAEYA,K,CAAO,CAChB,MAAOA,CAAAA,KAAK,GAAK,IAAV,EACAA,KAAK,GAAKG,SADV,EAEAH,KAAK,GAAK,KAFV,EAGAA,KAAK,GAAK,CAHV,EAIAI,KAAK,CAACJ,KAAD,CAJL,EAKCK,uBAAWC,EAAX,CAAcN,KAAd,GAAwBK,uBAAWE,KAAX,CAAiBP,KAAjB,CACnC,C,0BA9B8BQ,U","sourcesContent":["import {Type} from './type'\r\nimport {StringType} from './string-type'\r\n\r\nexport class PrimitiveType extends Type {\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    static is(value) {\r\n        if (value === null) return true\r\n\r\n        const type = typeof value\r\n        return ([\r\n            'undefined',\r\n            'boolean',\r\n            'number',\r\n            'bigint', // ECMAScript 2020\r\n            'string',\r\n            'symbol', // ECMAScript 2015\r\n        ].includes(type))\r\n    }\r\n\r\n    static clone(value) {\r\n        return value\r\n    }\r\n\r\n    static empty(value) {\r\n        return value === null\r\n            || value === undefined\r\n            || value === false\r\n            || value === 0\r\n            || isNaN(value)\r\n            || (StringType.is(value) && StringType.empty(value))\r\n    }\r\n}"],"file":"primitive-type.js"}