{"version":3,"sources":["../src/permission-checker.js"],"names":["PermissionChecker","checkAtLeast","requirePermissions","permissions","length","split","i","indexOf","checkByNames","names","namedPermissions","forEach","permissionName"],"mappings":"AAAA,cAAe,MAAMA,CAAAA,iBAAkB,CACnCC,YAAY,CAACC,kBAAD,CAAqBC,WAArB,CAAkC,CAC1C,GAAI,CAACD,kBAAD,EAAuB,CAACA,kBAAkB,CAACE,MAA/C,CAAuD,CACnD,MAAO,KACV,CAED,GAAI,CAACD,WAAD,EAAgB,CAACA,WAAW,CAACC,MAAjC,CAAyC,CACrC,MAAO,MACV,CAED,GAAI,MAAOF,CAAAA,kBAAP,GAA8B,QAAlC,CAA4C,CACxCA,kBAAkB,CAAGA,kBAAkB,CAACG,KAAnB,CAAyB,GAAzB,CAArB,CACA,IAAK,KAAMC,CAAAA,CAAX,GAAgBJ,CAAAA,kBAAhB,CAAoC,CAChC,GAAIC,WAAW,CAACI,OAAZ,CAAoBL,kBAAkB,CAACI,CAAD,CAAtC,IAA+C,CAAC,CAApD,CAAuD,CACnD,MAAO,KACV,CACJ,CACJ,CAPD,IAOO,IAAI,MAAOJ,CAAAA,kBAAP,GAA8B,QAAlC,CAA4C,CAC/C,IAAK,KAAMI,CAAAA,CAAX,GAAgBJ,CAAAA,kBAAhB,CAAoC,CAChC,GAAI,KAAKD,YAAL,CAAkBC,kBAAkB,CAACI,CAAD,CAApC,CAAJ,CAA8C,CAC1C,MAAO,KACV,CACJ,CACJ,CAED,MAAO,MACV,CAEDE,YAAY,CAACC,KAAD,CAAQN,WAAR,CAAqB,CAC7B,KAAMO,CAAAA,gBAAgB,CAAG,EAAzB,CACAD,KAAK,CAACE,OAAN,CAAeC,cAAD,EAAoB,CAC9BF,gBAAgB,CAACE,cAAD,CAAhB,CAAmCT,WAAW,CAACI,OAAZ,CAAoBK,cAApB,IAAwC,CAAC,CAC/E,CAFD,EAGA,MAAOF,CAAAA,gBACV,CAlCkC","sourcesContent":["export default class PermissionChecker {\r\n    checkAtLeast(requirePermissions, permissions) {\r\n        if (!requirePermissions || !requirePermissions.length) {\r\n            return true\r\n        }\r\n\r\n        if (!permissions || !permissions.length) {\r\n            return false\r\n        }\r\n\r\n        if (typeof requirePermissions === 'string') {\r\n            requirePermissions = requirePermissions.split('|')\r\n            for (const i in requirePermissions) {\r\n                if (permissions.indexOf(requirePermissions[i]) !== -1) {\r\n                    return true\r\n                }\r\n            }\r\n        } else if (typeof requirePermissions === 'object') {\r\n            for (const i in requirePermissions) {\r\n                if (this.checkAtLeast(requirePermissions[i])) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    checkByNames(names, permissions) {\r\n        const namedPermissions = {}\r\n        names.forEach((permissionName) => {\r\n            namedPermissions[permissionName] = permissions.indexOf(permissionName) !== -1\r\n        })\r\n        return namedPermissions\r\n    }\r\n}\r\n"],"file":"permission-checker.js"}