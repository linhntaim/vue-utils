{"version":3,"sources":["../../../src/cookie/cookie-stores/cookie-store.js"],"names":["CookieStore","cookieStoreHandler","name","def","value","getJson","retrieveTransform","expires","storeTransform","setTemporarySettings","Date","getTime","setJson","remove"],"mappings":"wtBAAaA,CAAAA,W,yBACT;AACJ;AACA;AACA;AACA;AACA,OACI,qBAAYC,kBAAZ,CAAgCC,IAAhC,CAAkD,IAAZC,CAAAA,GAAY,2DAAN,IAAM,mCAC9C,KAAKF,kBAAL,CAA0BA,kBAA1B,CACA,KAAKC,IAAL,CAAYA,IAAZ,CACA,KAAKE,KAAL,CAAa,IAAb,CACA,KAAKD,GAAL,CAAWA,GACd,C,oFAEiBC,K,CAAO,CACrB,MAAOA,CAAAA,KACV,C,sDAEcA,K,CAAO,CAClB,MAAOA,CAAAA,KACV,C,2CAEU,CACP,GAAI,KAAKA,KAAL,EAAc,IAAlB,CAAwB,CACpB,GAAMA,CAAAA,KAAK,CAAG,KAAKH,kBAAL,CAAwBI,OAAxB,CAAgC,KAAKH,IAArC,CAAd,CACA,KAAKE,KAAL,CAAa,KAAKE,iBAAL,CAAuBF,KAAK,CAAGA,KAAH,CAAW,KAAKD,GAA5C,CAChB,CACD,MAAO,MAAKC,KACf,C,oCAEKA,K,CAAOG,O,CAAS,CAClB,KAAKH,KAAL,CAAa,KAAKI,cAAL,CAAoBJ,KAApB,CAAb,CACA,KAAKH,kBAAL,CACKQ,oBADL,CAC0B,CAClBF,OAAO,CAAEA,OAAO,CAAGA,OAAH,CAAa,GAAIG,CAAAA,IAAJ,CAAS,GAAIA,CAAAA,IAAJ,GAAWC,OAAX,GAAuB,IAAM,EAAN,CAAW,IAAX,CAAkB,IAAlD,CADX,CAD1B,EAIKC,OAJL,CAIa,KAAKV,IAJlB,CAIwB,KAAKE,KAJ7B,EAKA,MAAO,MAAKA,KACf,C,uCAEQ,CACL,KAAKH,kBAAL,CAAwBY,MAAxB,CAA+B,KAAKX,IAApC,EACA,KAAKE,KAAL,CAAa,IAChB,C","sourcesContent":["export class CookieStore {\r\n    /**\r\n     *\r\n     * @param {CookieStoreHandler} cookieStoreHandler\r\n     * @param {String} name\r\n     * @param {Object|String} def\r\n     */\r\n    constructor(cookieStoreHandler, name, def = null) {\r\n        this.cookieStoreHandler = cookieStoreHandler\r\n        this.name = name\r\n        this.value = null\r\n        this.def = def\r\n    }\r\n\r\n    retrieveTransform(value) {\r\n        return value\r\n    }\r\n\r\n    storeTransform(value) {\r\n        return value\r\n    }\r\n\r\n    retrieve() {\r\n        if (this.value == null) {\r\n            const value = this.cookieStoreHandler.getJson(this.name)\r\n            this.value = this.retrieveTransform(value ? value : this.def)\r\n        }\r\n        return this.value\r\n    }\r\n\r\n    store(value, expires) {\r\n        this.value = this.storeTransform(value)\r\n        this.cookieStoreHandler\r\n            .setTemporarySettings({\r\n                expires: expires ? expires : new Date(new Date().getTime() + 365 * 24 * 3600 * 1000),\r\n            })\r\n            .setJson(this.name, this.value)\r\n        return this.value\r\n    }\r\n\r\n    remove() {\r\n        this.cookieStoreHandler.remove(this.name)\r\n        this.value = null\r\n    }\r\n}\r\n"],"file":"cookie-store.js"}