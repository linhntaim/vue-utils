{"version":3,"sources":["../src/crypto.js"],"names":["Crypto","secret","text","CryptoJS","AES","encrypt","getSecret","toString","decrypt","enc","Utf8","e","console","log","data","toJson","fromJson","Base64","stringify","parse","encodedText","encodeBase64","decodeBase64","encryptBase64","decryptBase64","JSON"],"mappings":"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","sourcesContent":["import CryptoJS from 'crypto-js'\r\n\r\nexport class Crypto {\r\n    constructor(secret = null) {\r\n        this.secret = secret\r\n    }\r\n\r\n    getSecret(secret = null) {\r\n        return secret ? secret : this.secret\r\n    }\r\n\r\n    encrypt(text, secret = null) {\r\n        return CryptoJS.AES.encrypt(text, this.getSecret(secret)).toString()\r\n    }\r\n\r\n    decrypt(text, secret = null) {\r\n        try {\r\n            return CryptoJS.AES.decrypt(text, this.getSecret(secret)).toString(CryptoJS.enc.Utf8)\r\n        } catch (e) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(e)\r\n            return null\r\n        }\r\n    }\r\n\r\n    encryptJson(data, secret = null) {\r\n        return this.encrypt(this.toJson(data), secret)\r\n    }\r\n\r\n    decryptJson(text, secret = null) {\r\n        return this.fromJson(this.decrypt(text, secret))\r\n    }\r\n\r\n    encodeBase64(text) {\r\n        return CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(text))\r\n    }\r\n\r\n    decodeBase64(encodedText) {\r\n        return CryptoJS.enc.Utf8.stringify(CryptoJS.enc.Base64.parse(encodedText))\r\n    }\r\n\r\n    encodeBase64Json(data) {\r\n        return this.encodeBase64(this.toJson(data))\r\n    }\r\n\r\n    decodeBase64Json(encodedText) {\r\n        return this.fromJson(this.decodeBase64(encodedText))\r\n    }\r\n\r\n    encryptBase64(text, secret = null) {\r\n        return this.encodeBase64(this.encrypt(text, secret))\r\n    }\r\n\r\n    decryptBase64(encodedText, secret = null) {\r\n        return this.decrypt(this.decodeBase64(encodedText), secret)\r\n    }\r\n\r\n    encryptBase64Json(data, secret = null) {\r\n        return this.encryptBase64(this.toJson(data), secret)\r\n    }\r\n\r\n    decryptBase64Json(encodedText, secret = null) {\r\n        return this.fromJson(this.decryptBase64(encodedText, secret))\r\n    }\r\n\r\n    toJson(data) {\r\n        return JSON.stringify(data)\r\n    }\r\n\r\n    fromJson(text) {\r\n        try {\r\n            return JSON.parse(text)\r\n        } catch (e) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(e)\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\n"],"file":"crypto.js"}