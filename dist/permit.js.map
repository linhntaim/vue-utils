{"version":3,"sources":["../src/permit.js"],"names":["Permit","matchedPermissions","matchingPermissions","getPermissions","length","some","matchedPermission","includes","matchedPermissionNames","forEach","permissionName","permissions","split"],"mappings":"mtBAAaA,CAAAA,M,0GACT;AACJ;AACA;AACA;AACA;AACA,O,qBACUC,kB,CAAoBC,mB,CAAqB,CAC3CD,kBAAkB,CAAG,KAAKE,cAAL,CAAoBF,kBAApB,CAArB,CACA,GAAI,CAACA,kBAAkB,CAACG,MAAxB,CAAgC,CAC5B,MAAO,KACV,CAEDF,mBAAmB,CAAG,KAAKC,cAAL,CAAoBD,mBAApB,CAAtB,CACA,GAAI,CAACA,mBAAmB,CAACE,MAAzB,CAAiC,CAC7B,MAAO,MACV,CAED,MAAOH,CAAAA,kBAAkB,CAACI,IAAnB,CAAwB,SAAAC,iBAAiB,QAAIJ,CAAAA,mBAAmB,CAACK,QAApB,CAA6BD,iBAA7B,CAAJ,CAAzC,CACV,CAED;AACJ;AACA;AACA;AACA;AACA,O,sDACmBE,sB,CAAwBN,mB,CAAqB,CACxD,GAAMD,CAAAA,kBAAkB,CAAG,EAA3B,CACAO,sBAAsB,CAACC,OAAvB,CAA+B,SAAAC,cAAc,CAAI,CAC7CT,kBAAkB,CAACS,cAAD,CAAlB,CAAqCR,mBAAmB,CAACK,QAApB,CAA6BG,cAA7B,CACxC,CAFD,EAGA,MAAOT,CAAAA,kBACV,CAED;AACJ;AACA;AACA;AACA,O,sDACmBU,W,CAAa,CACxB,MAAOA,CAAAA,WAAW,CACb,MAAOA,CAAAA,WAAP,GAAuB,QAAvB,CAAkCA,WAAW,CAACC,KAAZ,CAAkB,GAAlB,CAAlC,CAA2DD,WAD9C,CAEZ,EACT,C","sourcesContent":["export class Permit {\r\n    /**\r\n     *\r\n     * @param {Array} matchedPermissions\r\n     * @param {Array} matchingPermissions\r\n     * @returns {boolean}\r\n     */\r\n    match(matchedPermissions, matchingPermissions) {\r\n        matchedPermissions = this.getPermissions(matchedPermissions)\r\n        if (!matchedPermissions.length) {\r\n            return true\r\n        }\r\n\r\n        matchingPermissions = this.getPermissions(matchingPermissions)\r\n        if (!matchingPermissions.length) {\r\n            return false\r\n        }\r\n\r\n        return matchedPermissions.some(matchedPermission => matchingPermissions.includes(matchedPermission))\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Array} matchedPermissionNames\r\n     * @param {Array} matchingPermissions\r\n     * @returns {{}}\r\n     */\r\n    matchWithNames(matchedPermissionNames, matchingPermissions) {\r\n        const matchedPermissions = {}\r\n        matchedPermissionNames.forEach(permissionName => {\r\n            matchedPermissions[permissionName] = matchingPermissions.includes(permissionName)\r\n        })\r\n        return matchedPermissions\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String[]|String} permissions\r\n     * @returns {String[]}\r\n     */\r\n    getPermissions(permissions) {\r\n        return permissions ?\r\n            (typeof permissions === 'string' ? permissions.split('|') : permissions)\r\n            : []\r\n    }\r\n}\r\n"],"file":"permit.js"}