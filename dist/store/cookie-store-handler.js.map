{"version":3,"sources":["../../src/store/cookie-store-handler.js"],"names":["CookieStoreHandler","settings","crypto","encryptExceptNames","namePrefix","temporarySettings","setTemporarySettings","name","value","retrieveTemporarySettings","setCookieRaw","expires","path","domain","sameSite","getCookieRaw","removeCookieRaw","names","forEach","removeRaw","naming","clearCookieRaw","window","location","protocol","StoreHandler"],"mappings":"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","sourcesContent":["import {StoreHandler} from './store-handler'\r\n\r\nexport class CookieStoreHandler extends StoreHandler {\r\n    constructor(settings, crypto, encryptExceptNames = null, namePrefix = '') {\r\n        super(crypto, encryptExceptNames, namePrefix)\r\n\r\n        this.settings = settings\r\n        this.temporarySettings = {}\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param temporarySettings\r\n     * @returns {CookieStoreHandler}\r\n     */\r\n    setTemporarySettings(temporarySettings = {}) {\r\n        this.temporarySettings = temporarySettings\r\n        return this\r\n    }\r\n\r\n    retrieveTemporarySettings() {\r\n        const temporarySettings = this.temporarySettings\r\n        this.setTemporarySettings()\r\n        return temporarySettings\r\n    }\r\n\r\n    setRaw(name, value) {\r\n        const settings = this.retrieveTemporarySettings()\r\n        this.setCookieRaw(\r\n            name,\r\n            value,\r\n            this.expires(settings.expires),\r\n            this.path(settings.path),\r\n            this.domain(settings.domain),\r\n            this.sameSite(settings.sameSite),\r\n        )\r\n    }\r\n\r\n    setCookieRaw(name, value, expires = null, path = '/', domain = null, sameSite = 'lax') {\r\n\r\n    }\r\n\r\n    getRaw(name) {\r\n        return this.getCookieRaw(name)\r\n    }\r\n\r\n    getCookieRaw(name) {\r\n\r\n    }\r\n\r\n    removeRaw(name) {\r\n        const settings = this.retrieveTemporarySettings()\r\n        this.removeCookieRaw(\r\n            name,\r\n            this.path(settings.path),\r\n            this.domain(settings.domain),\r\n        )\r\n    }\r\n\r\n    removeCookieRaw(name, path = '/', domain = null) {\r\n\r\n    }\r\n\r\n    removeMany(names) {\r\n        const settings = this.retrieveTemporarySettings()\r\n        names.forEach(name => {\r\n            this.setTemporarySettings(settings)\r\n            this.removeRaw(this.naming(name))\r\n        })\r\n        return this\r\n    }\r\n\r\n    clearRaw() {\r\n        this.clearCookieRaw()\r\n    }\r\n\r\n    clearCookieRaw() {\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Date|Function|null} expires\r\n     * @returns {Date|null}\r\n     */\r\n    expires(expires = null) {\r\n        if (!expires) expires = this.settings.expires\r\n        return typeof expires === 'function' ? expires() : (expires ? expires : null)\r\n    }\r\n\r\n    path(path = '/') {\r\n        return path ? path : this.settings.path\r\n    }\r\n\r\n    domain(domain = null) {\r\n        return domain ? domain : this.settings.domain\r\n    }\r\n\r\n    sameSite(sameSite = 'lax') {\r\n        return sameSite ? sameSite : this.settings.sameSite\r\n    }\r\n\r\n    secure() {\r\n        return window.location.protocol === 'https'\r\n    }\r\n}"],"file":"cookie-store-handler.js"}