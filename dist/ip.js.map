{"version":3,"sources":["../src/ip.js"],"names":["IP","matchingIp","matchedIp","Array","isArray","i","match","ipAddress","process","indexOf","kind","toNormalizedString","toString","parseCIDR","e","console","log"],"mappings":"wFAAA,yD,2sBAEaA,CAAAA,E,mHACHC,U,CAAYC,S,CAAW,CACzB,GAAIC,KAAK,CAACC,OAAN,CAAcF,SAAd,CAAJ,CAA8B,CAC1B,IAAK,GAAMG,CAAAA,CAAX,GAAgBH,CAAAA,SAAhB,CAA2B,CACvB,GAAI,KAAKI,KAAL,CAAWL,UAAX,CAAuBC,SAAS,CAACG,CAAD,CAAhC,CAAJ,CAA0C,MAAO,KACpD,CACD,MAAO,MACV,CACD,GAAIF,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAJ,CAA+B,CAC3B,IAAK,GAAMI,CAAAA,EAAX,GAAgBJ,CAAAA,UAAhB,CAA4B,CACxB,GAAI,KAAKK,KAAL,CAAWL,UAAU,CAACI,EAAD,CAArB,CAA0BH,SAA1B,CAAJ,CAA0C,MAAO,KACpD,CACD,MAAO,MACV,CAED,GAAI,CACAD,UAAU,CAAGM,mBAAUC,OAAV,CAAkBP,UAAlB,CAAb,CAEA,GAAIC,SAAS,CAACO,OAAV,CAAkB,GAAlB,IAA2B,CAAC,CAAhC,CAAmC,CAC/BP,SAAS,CAAGK,mBAAUC,OAAV,CAAkBN,SAAlB,CAAZ,CACA,GAAID,UAAU,CAACS,IAAX,KAAsB,MAAtB,EAAgCR,SAAS,CAACQ,IAAV,KAAqB,MAAzD,CAAiE,CAC7D,MAAOT,CAAAA,UAAU,CAACU,kBAAX,KAAoCT,SAAS,CAACS,kBAAV,EAC9C,CACD,MAAOV,CAAAA,UAAU,CAACW,QAAX,KAA0BV,SAAS,CAACU,QAAV,EACpC,CAEDV,SAAS,CAAGK,mBAAUM,SAAV,CAAoBX,SAApB,CAAZ,CACA,MAAOD,CAAAA,UAAU,CAACK,KAAX,CAAiBJ,SAAjB,CACV,CAAC,MAAOY,CAAP,CAAU,CACR;AACAC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAEA,MAAO,MACV,CACJ,C","sourcesContent":["import ipAddress from 'ipaddr.js'\r\n\r\nexport class IP {\r\n    match(matchingIp, matchedIp) {\r\n        if (Array.isArray(matchedIp)) {\r\n            for (const i in matchedIp) {\r\n                if (this.match(matchingIp, matchedIp[i])) return true\r\n            }\r\n            return false\r\n        }\r\n        if (Array.isArray(matchingIp)) {\r\n            for (const i in matchingIp) {\r\n                if (this.match(matchingIp[i], matchedIp)) return true\r\n            }\r\n            return false\r\n        }\r\n\r\n        try {\r\n            matchingIp = ipAddress.process(matchingIp)\r\n\r\n            if (matchedIp.indexOf('/') === -1) {\r\n                matchedIp = ipAddress.process(matchedIp)\r\n                if (matchingIp.kind() === 'ipv6' && matchedIp.kind() === 'ipv6') {\r\n                    return matchingIp.toNormalizedString() === matchedIp.toNormalizedString()\r\n                }\r\n                return matchingIp.toString() === matchedIp.toString()\r\n            }\r\n\r\n            matchedIp = ipAddress.parseCIDR(matchedIp)\r\n            return matchingIp.match(matchedIp)\r\n        } catch (e) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(e)\r\n\r\n            return false\r\n        }\r\n    }\r\n}\r\n"],"file":"ip.js"}